#include <iostream> 

using namespace std;

struct stack {  //  Структура стека
	int Inf;  //  Значение ячейки
	stack* next;  //  Ссылка на следующий элемент
};

void push(stack*& h, int x) {  //  Функция вставки элемента в стек
	stack* r = new stack;  //  Создаём новый стек
	r->Inf = x;  //  Добавляем новый элемент
	r->next = h;  //  Он является первым
	h = r;
}

int pop(stack*& h) {  //  Функция удаления из начала стека элемента
	int i = h->Inf;  //  Сохраняем значение головы
	stack* r = h;  //  Создаём ссылку на голову
	h = h->next;  //  Новая голова - это новый элемент
	delete r;  //  Удаляем первый элемент
	return i;  //  Возвращаем удаленный элемент
}

void reverse(stack*& h) {  //  Функция обращения стека
	stack* head1 = NULL;  //  Голова пуста
	while (h)  //  Пока стек не пуст
		push(head1, pop(h));  //  Заполняем стек
	h = head1;  //  Новая голова
}

stack* result(stack*& h, int min, int numb, int max) {  //  Функция создания результирующего стека
	stack* res = NULL;  //  Инициализируем новый стек
	int fl = 0;  //  Переменная-флаг о том, что мы дошли до первого или последнего минимального
	while (h) {  //  Пока не дойдём до конца старого стека
		int x = pop(h);  //  Получаем его элемент
		if (x == min) {  //  Если он минимальный
			fl++;  //  Увеличиваем количество минимальных
			if (fl == 1 || fl == numb) {  //  Если он первый или последний, то...
				push(res, max);  //  Вставляем этот максимальный элемент 
				push(res, x);  //  и этот элемент
			}
			else push(res, x);  //  Иначе просто вставляем элемент
		}
		else push(res, x);  //  Вставляем элемент
	}
		reverse(res);  //  Обращаем результирующий стек
	return res;  //  Возвращаем результирующий стек
}

int main() {
	setlocale(LC_ALL, "Russian");  //  Подключаем русский язык
	int n;  //  Переменная количества чисел
	cout << "Введите количество чисел:" << endl;  //  Выводим текст 
	cin >> n;  //  Вводим их количество
	stack* head = NULL;  //  Инициализируем стек
	int x, max = 0, min = 0, numb = 1;  //  Создаём необходимые переменные
	for (int i = 0; i < n; i++) {  //  Идем по всем номерам чисел
		cin >> x;  //  Вводим число
		if (i == 0) {  //  Если это первое число, то...
			max = x;  //  Оно пока что максимальное
			min = x;  //  и минимальное
		}
		if (x > max) max = x;  //  Если число больше максимального, то теперь оно максимальное
		if (x <= min && i > 0) {  //  Если число больше или равно максимальному, то теперь оно максимальное
			if (x < min) { min = x; numb = 1; }  //  Если это число самое маленькое, то считаем минимальные заново
			else numb++;  //  Иначе увеличиваем счетчик минимального
		}
		push(head, x);  //  Вставляем число в стек
	}
	reverse(head);  //  Переворачиваем стек
	stack* res = result(head, min, numb, max);  //  Создаём новый стек по условию  
	while (res)  //  Пока мы не дойдем до конца стека
		cout << pop(res) << " ";  //  Выводим элемент стека
	cout << endl;  //  Пропускаем строку
	return 0;
}
