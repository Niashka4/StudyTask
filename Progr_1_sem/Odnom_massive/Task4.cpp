#include <iostream>
#include <cmath>  // Подключаем модуль cmath

using namespace std;

int main() {

    int n, nomer = 0, s = 0;  //  Создаём переменные для длины массива, суммы элементов и номера задания
    cout << "Enter number of task: ";  cin >> nomer;  //  Выводим текст и вводим номер задания
    cout << "Enter long of massive" << endl;  //  Выводим текст 
    cout << "n = "; cin >> n;  //  Выводим текст и вводим длину массива
    int* a = new int [n];  //  Создаём одномерный массив
    for (int i = 0; i < n; i++) {  //  Цикл для заполнения всех элементов массива
        if (nomer == 5) {  //  Для пятого задания в выводе номеруем элементы массива с единицы
            cout << "a[ " << i + 1 << " ] = "; cin >> a[i];  //  Выводим текст и вводим элемент массива
        }
        if ((nomer == 10) || (nomer == 15) || (nomer == 20)) {  //  Для десятого, пятнадцатого и двадцатого задания в выводе номеруем элементы массива с нуля
            cout << "a[ " << i << " ] = "; cin >> a[i];  //  Выводим текст и вводим элемент массива
        }
    }

    if (nomer == 5) {  //  Условие 5 номера
        for (int i = 0; i < n; i++) {  //  Перебираем все элементы массива
            if (((i + 1) % 2 != 0) && (a[i] != 0) && (a[i] % 2 == 0)) s += a[i];  //  Если номер нечетный и сам элемент не ноль и четный, то накапливаем сумму таких элементов
        }
        if (s == 0) cout << "There are no such elements";  //  Выводим этот текст, если необходимых элементов массива нет

        else cout << s;  //  Выводим сумму необходимых элементов массива
    }
    if (nomer == 10) {  //  Условие 10 номера
        int flag = 0;  //  Создаём вспомогательную переменную типа Int
        cout << "Numbers of this element:";  //  Выводим текст
        for (int i = 0; i < n; i++) {  //  Перебираем все элементы массива
            if ((a[i] % 2 != 0) && (a[i] % 3 != 0)) {  //  Если элемент массива нечётный и не делится на 3, то ...
                cout << " " << i;  //  Выводим номера элементов
                flag = 1;  //  Если есть хоть один необходимый элемент массива, то переменная flag становится единицей
            }
        }
        if (flag == 0) cout << " there are no such elements";  //  Выводим этот текст, если необходимых элементов массива нет 
    }
    if (nomer == 15) {  //  Условие 15 номера
        int max = -2;  //  Создаём переменную max с очень маленьким значением
        for (int i = 0; i < n; i++) {  //  Перебираем все элементы массива
            if ((a[i] % 2 == 0) && (a[i] >= max)) max = a[i];  //  Находим максимальный чётный элемент массива
        }
        cout << "Numbers of this element:";  //  Выводим текст
        int flag = 0;  //  Создаём вспомогательную переменную типа Int
        for (int i = 0; i < n; i++) {  //  Перебираем все элементы массива
            if (a[i] == max) {  //  Если найден элемент равный максимальному, то ...
                cout << " " << i; flag = 1;  //  Выводим его номер и меняем значение переменной flag
            }
        }
        if (flag == 0) cout << " there are no such elements";  //  Выводим этот текст, если необходимых элементов массива нет
    }
    if (nomer == 20) {  //  Условие 20 номера
        int min = 0, j, dop = 0, flag = 0;  //  Создаём переменные типа int для минимального элемента, его номера и вспомогательные переменные
        for (int i = 0; i < n; i++) {  //  Перебираем все элементы массива
            if (a[i] % 2 != 0) {
                min = a[i];  //  Находим первый нечетный элемент массива
                flag = 1;  //  Меняем значение вспомогательной переменной flag
            }
        }  
        for (int i = 0; i < n; i++) {  //  Перебираем все элементы массива
            if ((a[i] % 2 != 0) && (a[i] <= min)) {
                min = a[i]; j = i;  //  Находим последний минимальный элемент массива и запоминаем его номер
            }  
        }
        switch(flag) {  //  Конструкция switch
        case(1): dop = a[n - 1]; a[n - 1] = a[j]; a[j] = dop;  //  Меняем местами последний элемент и элемент с минимальным значением
            cout << "Massive a:";  //  Выводим текст
            for (int i = 0; i < n; i++) {  //  Перебираем все элементы массива
                cout << " " << a[i];  //  Выводим текст и выводим элемент массива
            }
            break;
        case(0): cout << "There are no such elements"; break;  //  Выводим этот текст, если необходимых элементов массива нет
        }
    }
    return 0;
}