#include <iostream>
#include <string>

using namespace std;

int main() {
	string s1, s2, s3;  //  Создаем переменные для трёх строк
	cout << "Enter string: \n";  //  Выводим текст с переносом на новую строку
	getline(cin, s1);  //  Вводим строку
	cout << "Enter word: \n";  //  Выводим текст с переносом на новую строку
	getline(cin, s2);  //  Вводим слово
	int len = s1.length();  //  Создаем переменную для длины строки
	int nach = 0, kon = 0, count, k, g;  //  Создаем переменные для начала и конца слова, количества и вспомогательные переменные
	for (int i = 0; i < len; i++) {  //  Проходим по всем элементам введённой строки
		s3 = "";  //  Очищаем строку 
		count = 0;  //  Обнуляем счетчик
		g = 0;  //  Обнуляем переменную, означающую удаление слова
		if ((isspace(s1[i]) != 0) || (s1[i] == '.')) {  //  Если найден знак пробел или точка
			kon = i - 1;  //  Находим конец слова
			for (int i2 = nach; i2 <= kon; i2++) s3 += s1[i2];  //  Создаем копию слова в новой строке
			for (int i3 = 0; i3 < s2.length(); i3++) {  //  Проходим по введенному слову
				k = 0;  //  Обнуляем вспомогательную переменную
				for (int j3 = 0; j3 < s3.length(); j3++) {  //  Проходим по элементам слова из строки
					if ((s2[i3] == tolower(s3[j3])) || (s2[i3] == toupper(s3[j3]))) {  //  Если буквы из слов совпадают, то...
						if (k == 0) {  //  Если мы еще не находили эту букву в созданном слове из введенного слова
							s3.erase(j3, 1);  //  Удаляем эту букву
							s3.insert(0, "1");  //  Добавляем в начало единичку
							k = 1;  //  Теперь переменная равна единице
						}
					}
				}
			}
			if (s3.length() >= s2.length()) {  //  Если длина строки для полученного слова больше или равна длине строки для введенного слова
				for (int i4 = 0; i4 < s2.length(); i4++)  //  Проходимся по символам введенного слова
					if (s3[i4] == '1') count++;  //  Если начале есть единичка, то счетчик +1
				if (count == s2.length()) {  //  Если длина введенного слова и значение счетчика совпадают, то в полученном слове есть все буквы из введенного слова
					g = 1;  //  Переменную, обозначающую удаление слова, приравниваем к единице
					s1.erase(nach, kon - nach + 2);  //  Удаляем это слово
					len = len - (kon - nach) - 2;  //  Считаем новую длину строки
					i = nach;  //  Переприсваиваем i на значение начала нового слова
				}
			}
			if (g == 0) nach = i + 1;  //  Если мы не удаляли слово, то ночало нового слова находится на i + 1 символе
			else nach = i;  //  Иначе на i символе
		}
	}
	cout << "New string: \n";  //  Выводим текст с переносом на новую строку
	cout << s1;  //  Выводим измененную строку
	return 0;
}