//  Дан файл, содержащий расписание движения поездов в виде : Маршрут - время отправления - время в пути.Вывести в новый файл данные о поездах, которые прибываеют на конечную станцию в промежутке от 12 до 15 часов.
#include <iostream>
#include <fstream>
#include <string>

using namespace std;

int main() {
	ofstream res;  //  создаем файл для записи нужных маршрутов
	ifstream marsh;  //  читаем файл со всеми маршрутами
	res.open("result.txt");  //  Открываем файл с результатами
	marsh.open("marshrut.txt");  //  Открываем файл со списком маршрутов
	if (marsh) cout << "Ok";  //  Если файл открыт, выводим Ok
	string str, str2 = "", str3 = "";  //  Созаем строковые переменные
	int k, num_str2, num_str3, nach = 0, kon = 0, time = 0;  //  Создаем числовые переменные
	while (!marsh.eof()) {  //  Пока мы не дошли до конца файла...
		k = 0; num_str2 = 0; num_str3 = 0; time = 0;  //  Обнуляем нужные переменные
		str2 = ""; str3 = ""; str = "";  //  Очищаем строковые переменные
		getline(marsh, str);  //  Считываем первую строку
		cout << str << endl;  //  Выводим эту строку для проверки
		for (int i = 0; i < str.length(); i++) {  //  Проходим по всем символам строки
			if (str[i] == ':') {  //  Если найдено двоеточие, то...
				if (str[i - 2] == '0') str2 += str[i - 1];  //  Если первый символ часа отправление 0, то записываем второй символ
				else { str2 += str[i - 2]; str2 += str[i - 1]; }  //  Иначе, записываем час отправления из вух символов
				for (int i2 = i + 6; i2 <= i + 7; i2++) {  //  Запускаем цикл для времени в пути
					if (isdigit(str[i2])) str3 += str[i2];  //  Записываем время в пути
				}
				cout << str2 << endl;  //  Выводим час отправления для проверки
				cout << str3 << endl;  //  Выводим время в пути для проверки
				num_str2 = stoi(str2);  //  Переводим час отправления в int
				num_str3 = stoi(str3);  //  Переводим время в пути в int
			}
		}
		time = num_str2 + num_str3;  //  Считаем час к которому приедет поезд
		if (time >= 24) {  //  Если час больше или равен 24, то...
			while (time >= 24) time -= 24;  //  Пока это выполняется, вычитаем из времени 24 часа
		}
		if ((time >= 12) && (time <= 14)) {  //  Если поезд приехал с 12 до 15 часов, то...
			res << str << endl;  //  Записываем данные о поезде в файл результатов
		}
		cout << time << endl;  //  Выводим время для проверки
	}
	marsh.close();  //  Закрываем файл с маршрутами
	res.close();  //  Закрываем файл с нужными выведенными маршрутами
	return 0;
}