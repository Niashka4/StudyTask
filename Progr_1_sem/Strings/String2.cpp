// Дано предложение, содержащее знаки препинания. После всех слов, начинающихся с данной буквы, поставить двоеточие.

#include <iostream>
#include <string>

using namespace std;

int main() {
	string s1, s2, s3;  //  Создаем переменные для трёх строк
	cout << "Enter string: \n";  //  Выводим текст с переносом на новую строку
	getline(cin, s1);  //  Вводим строку
	cout << "Enter letter: \n";  //  Вводим букву
	getline(cin, s2);  //  Строка с введенной буквой
	s3 = ":";  //  Строка с двоеточием
	int len = s1.length();  //  Создаем переменную для длины строки
	int nach = 0, kon = 0;  //  Создаем переменные для начала и конца слова
	for (int i = 0; i < len; i++) {  //  Проходим по всем элементам введённой строки
		if ((ispunct(s1[i]) != 0) && (isspace(s1[i]) == 0)) {  //  Если найден знак препинания
			kon = i - 1;  //  Находим конец слова
			if ((s1[nach] == toupper(s2[0])) || (s1[nach] == tolower(s2[0]))) {  //  Если первая буква - это введенная буква
				s1.insert(kon + 1, s3);  //  Вставляем двоеточие после слова
				len++;  //  Увеличиваем длину строки
				i++;  //  Смещаемся на один символ, который добавили
			}
			nach = i + 2;  //  Находим начало нового слова
		}
		else if ((isspace(s1[i]) != 0) && (isalpha(s1[i - 1]) != 0) && (ispunct(s1[i + 1]) != 0)) {  //  Если найдено тире
			kon = i - 1;  //  Находим конец слова
			if ((s1[nach] == toupper(s2[0])) || (s1[nach] == tolower(s2[0]))) {  //   Если первая буква - это введенная буква
				s1.insert(kon + 1, s3);  //  Вставляем двоеточие после слова
				len++;  //  Увеличиваем длину строки
				i++;  //  Смещаемся на один символ, который добавили
			}
			nach = i + 2;  //  Находим начало нового слова
		}
		else if ((isspace(s1[i]) != 0) && (isalpha(s1[i - 1]) != 0) && (ispunct(s1[i + 1]) == 0)) {  //  Если найден пробел
			kon = i - 1;  //  Находим конец слова
			if ((s1[nach] == toupper(s2[0])) || (s1[nach] == tolower(s2[0]))) {  //  Если первая буква - это введенная буква
				s1.insert(kon + 1, s3);  //  Вставляем двоеточие после слова
				len++;  //  Увеличиваем длину строки
				i++;  //  Смещаемся на один символ, который добавили
			}
			nach = i + 1;  //  Находим начало нового слова
		}
	}
	cout << "New string: \n";  //  Выводим текст с переносом на новую строку
	cout << s1;  //  Выводим измененную строку
	return 0;
}