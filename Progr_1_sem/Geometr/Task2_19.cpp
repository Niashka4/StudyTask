#include <iostream>
#include <cmath>  // Подключаем модуль cmath

using namespace std;

int main() {
    int ax, ay, bx, by, cx, cy, dx, dy, flag, flag2;  // Создаем переменные для координат точек и флагов
    float ab, bc, cd, ad, ac, bd, space, perimeter;  // Создаем переменные для длин сторон, диагоналей, площали и периметра
    const double eps = 1e-12;  // Создаем переменную для епсилона
    
    cout << "Enter point coordinates: \n";  // Выводим текст
    cin >> ax >> ay >> bx >> by >> cx >> cy >> dx >> dy;  //  Вводим значения кооринат четырех точек
    
    ab = sqrt((bx - ax)*(bx - ax) + (by - ay)*(by - ay));  //  Находим длину стороны ab как длину вектора между двумя точками
    bc = sqrt((cx - bx)*(cx - bx) + (cy - by)*(cy - by));  //  Находим длину стороны bc как длину вектора между двумя точками
    cd = sqrt((dx - cx)*(dx - cx) + (dy - cy)*(dy - cy));  //  Находим длину стороны cd как длину вектора между двумя точками
    ad = sqrt((ax - dx)*(ax - dx) + (ay - dy)*(ay - dy));  //  Находим длину стороны ad как длину вектора между двумя точками
    
    
    ac = sqrt((cx - ax)*(cx - ax) + (cy - ay)*(cy - ay));  //  Находим длину диагонали ac как длину вектора между двумя точками
    bd = sqrt((dx - bx)*(dx - bx) + (dy - by)*(dy - by));  //  Находим длину диагонали bd как длину вектора между двумя точками
    
    if ((abs(ab - cd) < eps) && (abs(bc - ad) < eps)) flag = 1;  //  Проверка на второй признак параллелограмма, если flag == 1 -> четырехугольник - параллелограмм
    else flag = 0;  //  flag == 0 -> четырехугольник - не параллелограмм
    if (flag == 1) {  //  Если четырехугольник - параллелограмм, то...
        if (abs(ab - bc) < eps)  {flag += 1; flag2 = 1;}  //  Проверка на ромб. Если все стороны равны, то flag2 == 1
        else flag2 = 0;  //  Если равны только противоположные стороны
        if (abs(ac - bd) < eps)  flag += 1;  //  Проверка на квадрат по равенству диагоналей в ромбе
        if (flag == 2 && flag2 == 0) flag += 2;  //  Проверка на прямоугольник (равны диагонали и равны только противоположные стороны)
    }
    
    switch(flag) {
        case(0): cout << "Not a parallelogram"; break;  //  Если flag == 0 -> четырехугольник - не параллелограмм
        case(1): cout << "Parallelogram"; break;  //  Если flag == 1 -> четырехугольник - параллелограмм
        case(2): space = (ac*bd)/2;  //  Считаем площадь ромба
            perimeter = ab * 4;  //  Считаем периметр ромба
            cout << "Rhombus \n";  //  Если flag == 2 -> параллелограмм - ромб
            cout << "Space = " << space << "\n";  //  Выводим текст и площадь ромба
            cout << "Perimeter = " << perimeter << "\n";  //  Выводим текст и периметр ромба
            break;
        case(3): space = ab * ab;  //  Считаем площадь квадрата
            perimeter = ab * 4;  //  Считаем периметр квадрата
            cout << "Square \n";  //  Если flag == 3 -> ромб - квадрат
            cout << "Space = " << space << "\n";  //  Выводим текст и площадь квадрата
            cout << "Perimeter = " << perimeter << "\n";  //  Выводим текст и периметр квадрата
            break;
        case(4): space = ab * bc;  //  Считаем площадь прямоугольника
            perimeter = (ab + bc) * 2;  //  Считаем периметр прямоугольника
            cout << "Rectangle \n";  //  Если flag == 4 -> параллелограмм - прямоугольник
            cout << "Space = " << space << "\n";  //  Выводим текст и площадь прямоугольника
            cout << "Perimeter = " << perimeter << "\n";  //  Выводим текст и периметр прямоугольника
            break;
    }
    return 0;
}